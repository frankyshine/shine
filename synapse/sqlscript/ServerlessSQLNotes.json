{
	"name": "ServerlessSQLNotes",
	"properties": {
		"folder": {
			"name": "Synapse SQL/Serverless SQL Pools"
		},
		"content": {
			"query": "\n-- AD-HOC QUERIES -- Defualt Database\n--*************************************************\n\n\n\n\n\n-- CUSTOM DATABASES\n--*************************************************\n--*************************************************\n\n\n-- DATABASES\n--*************************************************\n\n\n\n-- CREDENTIALS (Database scoped)\n--*************************************************\n\nCREATE DATABASE SCOPED CREDENTIAL storagekeycred\nWITH\n    IDENTITY='SHARED ACCESS SIGNATURE',  \n    SECRET = 'sv=xxx...';\n\n\n-- EXTERNAL DATA DOURCES FILE(S)\n--*************************************************\n/* An external data source encapsulates a connection to a file system location in a data lake. \nYou can then use this connection to specify a relative path in which the data files for the external \ntable created.\n\nNOTE.\nIf the source data for the CETAS statement is in files in the same data lake path, you can use the \nsame external data source in the OPENROWSET function used to query it. Alternatively, you can create a \nseparate external data source for the source files or use a fully qualified file path in the OPENROWSET function\n\n*/\n\nhttps://adlsgen2msdncert.blob.core.windows.net/adfcookbook/airlines.csv\n\nCREATE EXTERNAL DATA SOURCE Sourcefiles1\nWITH (\n    LOCATION = 'https://adlsgen2msdncert.blob.core.windows.net/adfcookbook/'\n);\n\n\nCREATE EXTERNAL DATA SOURCE secureSourceFiles\nWITH (\n    LOCATION = 'https://adlsgen2msdncert.blob.core.windows.net/adfcookbook/'\n    CREDENTIAL = storagekeycred\n);\n\n\nCREATE EXTERNAL DATA SOURCE secureDestinationFiles\nWITH (\n    LOCATION =  'https://adlsgen2msdncert.blob.core.windows.net/adfcookbook/DestinationFiles/'\n    CREDENTIAL = storagekeycred\n);\n\n\n\n\n-- EXTERNAL FILE FORMATs \n--*************************************************\nCREATE EXTERNAL FILE FORMAT ParquetFormat\nWITH (\n        FORMAT_TYPE = PARQUET,\n        DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n    );\n\n\n\n-- AD-HOC QUERIES\n--*************************************************\n\n\n-- VIEWS\n--*************************************************\n/*\nuse the filepath() function to create 3 columns in the View which will expose the name of \nthe folder at the specified level.  We can use these 3 columns in a WHERE clause to partition prune which \nwill target only those folders required to satisfy the query\n*/\n\nCREATE EXTERNAL DATA SOURCE ExternalDataSourceDataLake\n\tWITH (\n\t\tLOCATION   = 'https://adlsgen2msdncert.blob.core.windows.net/adfcookbook/' \n\t    );\n\nCREATE VIEW LDW.vwBlogSalesOrders\nAS\nSELECT *,\nCAST(fct.filepath(1) AS INT) AS FilePathYear,\nCAST(fct.filepath(2) AS TINYINT) AS FilePathMonth,\nCAST(fct.filepath(3) AS DATE) AS FilePathDate\nFROM \nOPENROWSET \n(\n    BULK 'sourcedata/salesorder/OrderYear=*/OrderMonth=*/OrderDatePartition=*/*.csv',\n    DATA_SOURCE = 'ExternalDataSourceDataLake',\n    FORMAT = 'CSV',\n    PARSER_VERSION = '2.0',\n    HEADER_ROW = TRUE,\n    FIELDTERMINATOR ='|'\n) AS fct\n\n\n\n\n-- EXTERNAL TABLES\n--*************************************************\n\nCREATE EXTERNAL TABLE SpecialOrders\n    WITH (\n        -- details for storing results\n        LOCATION = 'special_orders/',\n        DATA_SOURCE = secureDestinationFiles,\n        FILE_FORMAT = ParquetFormat\n    )\nAS\nSELECT OrderID, CustomerName, OrderTotal\nFROM\n    OPENROWSET(\n        -- details for reading source files\n        BULK 'sales_orders/*.csv',\n        DATA_SOURCE = 'Sourcefiles1',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = TRUE\n    ) AS source_data\nWHERE OrderType = 'Special Order';\n\n\n\n\n-- STORE PROCEDURES\n--*************************************************\nCREATE PROCEDURE usp_special_orders_by_year @order_year INT\nAS\nBEGIN\n\n\t-- Drop the table if it already exists\n\tIF EXISTS (\n                SELECT * FROM sys.external_tables\n                WHERE name = 'SpecialOrders'\n            )\n        DROP EXTERNAL TABLE SpecialOrders\n\n\t-- Create external table with special orders\n\t-- from the specified year\n\tCREATE EXTERNAL TABLE SpecialOrders\n\t\tWITH (\n\t\t\tLOCATION = 'special_orders/',\n\t\t\tDATA_SOURCE = files,\n\t\t\tFILE_FORMAT = ParquetFormat\n\t\t)\n\tAS\n\tSELECT OrderID, CustomerName, OrderTotal\n\tFROM\n\t\tOPENROWSET(\n\t\t\tBULK 'sales_orders/*.csv',\n\t\t\tDATA_SOURCE = 'files',\n\t\t\tFORMAT = 'CSV',\n\t\t\tPARSER_VERSION = '2.0',\n\t\t\tHEADER_ROW = TRUE\n\t\t) AS source_data\n\tWHERE OrderType = 'Special Order'\n\tAND YEAR(OrderDate) = @order_year\nEND\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}