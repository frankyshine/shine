{
	"name": "Utilities",
	"properties": {
		"folder": {
			"name": "Spark - Lake Database/Python"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "TestSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "4fbd9ea3-7af8-4864-bb0b-ca9c9cdcd867"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/53b2e7eb-9e0b-45c0-8fa3-b6279c1b186e/resourceGroups/msdnCertification/providers/Microsoft.Synapse/workspaces/msdncertsynapsewrkspace/bigDataPools/TestSparkPool",
				"name": "TestSparkPool",
				"type": "Spark",
				"endpoint": "https://msdncertsynapsewrkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/TestSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import os\r\n",
					"rootdir = 'abfss://adfcookbook@adlsgen2msdncert.dfs.core.windows.net/WWI'\r\n",
					"\r\n",
					"for subdir, dirs, files in os.walk(rootdir):\r\n",
					"    for file in files:\r\n",
					"        print(os.path.join(subdir, file))"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					" files = mssparkutils.fs.ls(\"abfss://adfcookbook@adlsgen2msdncert.dfs.core.windows.net/WWI/Warehouse_Colors\")\r\n",
					" # files = mssparkutils.fs.ls(\"/\")\r\n",
					" for fi in files: \r\n",
					"  filename= fi.name\r\n",
					"  df = spark.read.load('abfss://adfcookbook@adlsgen2msdncert.dfs.core.windows.net/WWI/Warehouse_Colors/'+ filename , \r\n",
					"  format='csv',\r\n",
					"  header=True\r\n",
					"  )\r\n",
					"  display(df)\r\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					" %%pyspark\r\n",
					" files = mssparkutils.fs.ls('abfss://adfcookbook@adlsgen2msdncert.dfs.core.windows.net/WWI/Warehouse_Colors')\r\n",
					" # files = mssparkutils.fs.ls(\"/\")\r\n",
					" \r\n",
					"for fi in files: \r\n",
					"  filename= fi.name\r\n",
					"  #read csv files into dataframe\r\n",
					"  df = spark.read.load('abfss://adfcookbook@adlsgen2msdncert.dfs.core.windows.net/WWI/'+ filename,\r\n",
					"  format='csv',\r\n",
					"  header=True\r\n",
					"  )\r\n",
					"  # write DataFrames to Parquet files\r\n",
					"  df.write.format(\"parquet\")\r\n",
					"  .mode(\"overwrite\")\r\n",
					"  .option(\"compression\", \"snappy\")\r\n",
					"  .save(\"abfss://adfcookbook@adlsgen2msdncert.dfs.core.windows.net/WWI/conformed/facts/factsales/\" + filename)\r\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					" files = mssparkutils.fs.ls(\"abfss://adfcookbook@adlsgen2msdncert.dfs.core.windows.net/WWI/sourcedatapartitionsalesorder\")\r\n",
					" # files = mssparkutils.fs.ls(\"/\")\r\n",
					" \r\n",
					"for fi in files: \r\n",
					"  filename= fi.name\r\n",
					"  #read csv files into dataframe\r\n",
					"  df = spark.read.load('abfss://adfcookbook@adlsgen2msdncert.dfs.core.windows.net/WWI/sourcedatapartitionsalesorder'+ filename )\r\n",
					"  format='csv',\r\n",
					"  header=True\r\n",
					"  )\r\n",
					"  # write DataFrames to Parquet files\r\n",
					"  df.write.format(\"parquet\")\r\n",
					"  .mode(\"overwrite\")\r\n",
					"  .option(\"compression\", \"snappy\")\r\n",
					"  .save(\"abfss://adfcookbook@adlsgen2msdncert.dfs.core.windows.net/WWI/conformed/facts/factsales/\" + filename))\r\n",
					""
				],
				"execution_count": 3
			}
		]
	}
}